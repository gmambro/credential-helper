#!/usr/bin/env python

"""The credential cache agent."""
import os
from os import path
import sys
import atexit
import logging
import signal
from optparse import OptionParser

from credentialhelper import Server, Config


server = None

def main():
    """Main entry point for the agent."""

    usage = 'credentialcache-agent [options]'
    
    parser = OptionParser(usage=usage)
    parser.add_option("-c", "--config-dir",
                      dest="config_dir",
                      metavar="DIRECTORY",
                      help="configuration directory")
    (options, args) = parser.parse_args()
    
    config = Config(options.config_dir)
    
    socket_path = config.get_socket_path()
    check_socket_path(socket_path)

    server = Server(config)
    signal.signal(signal.SIGTERM, sig_handler)

    server.listen()    
    try:
        server.loop()
    except KeyboardInterrupt as e:
        server.close()
    
    return 0
    
def check_socket_path(socket_path):
    """Check directory permission and create it if needed"""
    dir_name = path.dirname(socket_path)

    if not os.path.exists(dir_name):
        # create parent dirs if needed but do not create the socket
        # dir in order to set permissions while creating
        parent_dir = path.dirname(dir_name)
        if parent_dir != '' and not path.exists(parent_dir):
            os.makedirs(parent_dir)
        os.mkdir(dir_name, 0700)
    else:
        dir_info = os.stat(dir_name)
        if dir_info.st_mode & 077:
            print >>sys.stderr, ("%s must be 700" % dir_name)
            sys.exit(1)

def sig_handler(signal, frame):
    sys.exit(0)
            
@atexit.register
def on_close():
    if server:
        server.close()
    
                
if __name__ == '__main__':
    # logging.basicConfig(level=logging.DEBUG)
    sys.exit(main())



